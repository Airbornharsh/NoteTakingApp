{
  "version": 3,
  "sources": ["../../stacks/ApiStack.js", "../../stacks/StorageStack.js", "../../stacks/AuthStack.js", "../../stacks/index.js"],
  "sourcesContent": ["import { Api, use } from \"@serverless-stack/resources\";\r\nimport { StorageStack } from \"./StorageStack\";\r\n\r\nexport function ApiStack({ stack, app }) {\r\n  const { table } = use(StorageStack);\r\n\r\n  const api = new Api(stack, \"Api\", {\r\n    defaults: {\r\n      authorizer: \"iam\",\r\n      function: {\r\n        permissions: [table],\r\n        environment: {\r\n          TABLE_NAME: table.tableName,\r\n          STRIPE_SECRET_KEY: process.env.STRIPE_SECRET_KEY,\r\n        },\r\n      },\r\n    },\r\n    routes: {\r\n      \"POST /notes\": \"functions/create.main\",\r\n      \"GET /notes/{id}\": \"functions/get.main\",\r\n      \"GET /notes\": \"functions/list.main\",\r\n      \"PUT /notes/{id}\": \"functions/update.main\",\r\n      \"DELETE /notes/{id}\": \"functions/delete.main\",\r\n    },\r\n  });\r\n\r\n  stack.addOutputs({\r\n    ApiEndpoint: api.url,\r\n  });\r\n\r\n  return {\r\n    api,\r\n  };\r\n}\r\n", "import { Bucket, Table } from \"@serverless-stack/resources\";\r\n\r\nexport function StorageStack({ stack, app }) {\r\n  // Create an S3 bucket\r\n  const bucket = new Bucket(stack, \"Uploads\", {\r\n    cors: [\r\n      {\r\n        maxAge: \"1 day\",\r\n        allowedOrigins: [\"*\"],\r\n        allowedHeaders: [\"*\"],\r\n        allowedMethods: [\"GET\", \"PUT\", \"POST\", \"DELETE\", \"HEAD\"],\r\n      },\r\n    ],\r\n  });\r\n\r\n  // Create the DynamoDB table\r\n  const table = new Table(stack, \"Notes\", {\r\n    fields: {\r\n      userId: \"string\",\r\n      noteId: \"string\",\r\n    },\r\n    primaryIndex: { partitionKey: \"userId\", sortKey: \"noteId\" },\r\n  });\r\n\r\n  return {\r\n    table,\r\n    bucket,\r\n  };\r\n}\r\n", "import * as iam from \"aws-cdk-lib/aws-iam\";\r\nimport { Auth, use } from \"@serverless-stack/resources\";\r\nimport { StorageStack } from \"./StorageStack\";\r\nimport { ApiStack } from \"./ApiStack\";\r\n\r\nexport function AuthStack({ stack, app }) {\r\n  const { bucket } = use(StorageStack);\r\n  const { api } = use(ApiStack);\r\n\r\n  const auth = new Auth(stack, \"Auth\", {\r\n    login: [\"email\"],\r\n  });\r\n    \r\n  auth.attachPermissionsForAuthUsers([\r\n    api,\r\n    new iam.PolicyStatement({\r\n      actions: [\"s3:*\"],\r\n      effect: iam.Effect.ALLOW,\r\n      resources: [\r\n        bucket.bucketArn + \"/private/${cognito-identity.amazonaws.com:sub}/*\",\r\n      ],\r\n    }),\r\n  ]);\r\n\r\n  stack.addOutputs({\r\n    Region: app.region,\r\n    UserPoolId: auth.userPoolId,\r\n    IdentityPoolId: auth.cognitoIdentityPoolId,\r\n    UserPoolClientId: auth.userPoolClientId,\r\n  });\r\n\r\n  return {\r\n    auth,\r\n  };\r\n}\r\n", "import { ApiStack } from \"./ApiStack\";\nimport { AuthStack } from \"./AuthStack\";\nimport { StorageStack } from \"./StorageStack\";\n\nexport default function main(app) {\n  app.setDefaultFunctionProps({\n    runtime: \"nodejs16.x\",\n    srcPath: \"services\",\n    bundle: {\n      format: \"esm\",\n    },\n  });\n  app.stack(StorageStack).stack(ApiStack).stack(AuthStack);\n}\n"],
  "mappings": ";;;;;;AAAA;;;ACAA;AAEO,sBAAsB,EAAE,OAAO,OAAO;AAE3C,QAAM,SAAS,IAAI,OAAO,OAAO,WAAW;AAAA,IAC1C,MAAM;AAAA,MACJ;AAAA,QACE,QAAQ;AAAA,QACR,gBAAgB,CAAC,GAAG;AAAA,QACpB,gBAAgB,CAAC,GAAG;AAAA,QACpB,gBAAgB,CAAC,OAAO,OAAO,QAAQ,UAAU,MAAM;AAAA,MACzD;AAAA,IACF;AAAA,EACF,CAAC;AAGD,QAAM,QAAQ,IAAI,MAAM,OAAO,SAAS;AAAA,IACtC,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA,cAAc,EAAE,cAAc,UAAU,SAAS,SAAS;AAAA,EAC5D,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AA1BgB;;;ADCT,kBAAkB,EAAE,OAAO,OAAO;AACvC,QAAM,EAAE,UAAU,IAAI,YAAY;AAElC,QAAM,MAAM,IAAI,IAAI,OAAO,OAAO;AAAA,IAChC,UAAU;AAAA,MACR,YAAY;AAAA,MACZ,UAAU;AAAA,QACR,aAAa,CAAC,KAAK;AAAA,QACnB,aAAa;AAAA,UACX,YAAY,MAAM;AAAA,UAClB,mBAAmB,QAAQ,IAAI;AAAA,QACjC;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,sBAAsB;AAAA,IACxB;AAAA,EACF,CAAC;AAED,QAAM,WAAW;AAAA,IACf,aAAa,IAAI;AAAA,EACnB,CAAC;AAED,SAAO;AAAA,IACL;AAAA,EACF;AACF;AA9BgB;;;AEHhB;AACA;AAIO,mBAAmB,EAAE,OAAO,OAAO;AACxC,QAAM,EAAE,WAAW,KAAI,YAAY;AACnC,QAAM,EAAE,QAAQ,KAAI,QAAQ;AAE5B,QAAM,OAAO,IAAI,KAAK,OAAO,QAAQ;AAAA,IACnC,OAAO,CAAC,OAAO;AAAA,EACjB,CAAC;AAED,OAAK,8BAA8B;AAAA,IACjC;AAAA,IACA,IAAQ,oBAAgB;AAAA,MACtB,SAAS,CAAC,MAAM;AAAA,MAChB,QAAQ,AAAI,WAAO;AAAA,MACnB,WAAW;AAAA,QACT,OAAO,YAAY;AAAA,MACrB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAED,QAAM,WAAW;AAAA,IACf,QAAQ,IAAI;AAAA,IACZ,YAAY,KAAK;AAAA,IACjB,gBAAgB,KAAK;AAAA,IACrB,kBAAkB,KAAK;AAAA,EACzB,CAAC;AAED,SAAO;AAAA,IACL;AAAA,EACF;AACF;AA7BgB;;;ACDD,cAAc,KAAK;AAChC,MAAI,wBAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAY,EAAE,MAAM,QAAQ,EAAE,MAAM,SAAS;AACzD;AATwB;",
  "names": []
}
