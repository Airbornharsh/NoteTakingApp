/// <reference types="node" />
import { getChildLogger, initializeLogger } from "./logger.js";
declare const STACK_DEPLOY_STATUS: {
    PENDING: string;
    DEPLOYING: string;
    SUCCEEDED: string;
    UNCHANGED: string;
    FAILED: string;
    SKIPPED: string;
};
declare const STACK_DESTROY_STATUS: {
    PENDING: string;
    REMOVING: string;
    SUCCEEDED: string;
    FAILED: string;
    SKIPPED: string;
};
declare function getCdkVersion(): any;
declare function synth(cdkOptions: any): any;
declare function diff(cdkOptions: any, stackIds: any): Promise<import("child_process").SpawnSyncReturns<Buffer> & import("child_process").SpawnSyncReturns<string> & import("child_process").SpawnSyncReturns<string | Buffer>>;
declare function deployInit(cdkOptions: any, stackId: any): Promise<{
    stackStates: {
        id: any;
        name: any;
        status: string;
        dependencies: any;
        account: undefined;
        region: any;
        startedAt: undefined;
        endedAt: undefined;
        events: never[];
        eventsFirstEventAt: undefined;
        errorMessage: undefined;
        outputs: undefined;
    }[];
    isCompleted: boolean;
}>;
declare function deployPoll(cdkOptions: any, stackStates: any): Promise<{
    stackStates: any;
    isCompleted: any;
}>;
declare function destroyInit(cdkOptions: any, stackId: any): Promise<{
    stackStates: {
        id: any;
        name: any;
        status: string;
        dependencies: any;
        region: any;
        events: never[];
        eventsFirstEventAt: undefined;
        errorMessage: undefined;
    }[];
    isCompleted: boolean;
}>;
declare function destroyPoll(cdkOptions: any, stackStates: any): Promise<{
    stackStates: any;
    isCompleted: any;
}>;
/**
 * Finds the path to the CDK package executable by converting the file path of:
 * /Users/spongebob/serverless-stack/node_modules/aws-cdk/package.json
 * to:
 * /Users/spongebob/serverless-stack/node_modules/.bin/cdk
 */
declare function getCdkBinPath(): string;
export * as Util from "./util/index.js";
export { Update } from "./update/index.js";
export { Pothos } from "./pothos/index.js";
export { Packager } from "./packager/index.js";
export { State } from "./state/index.js";
export { Runtime } from "./runtime/index.js";
export { Stacks } from "./stacks/index.js";
export * from "./cli/index.js";
export * from "./local/index.js";
export { Telemetry } from "./telemetry/index.js";
export * from "./aws-sdk/index.js";
export declare const logger: import("log4js").Logger;
export { diff, synth, deployInit, deployPoll, destroyInit, destroyPoll, getCdkBinPath, getCdkVersion, getChildLogger, initializeLogger, STACK_DEPLOY_STATUS, STACK_DESTROY_STATUS, };
