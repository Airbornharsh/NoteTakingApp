import * as trpc from "@trpc/server";
import AWS from "aws-sdk";
export const router = trpc
    .router()
    .query("getCredentials", {
    async resolve({ ctx }) {
        const cfg = new AWS.Config();
        const result = await new Promise((res, rej) => cfg.getCredentials((err, c) => {
            if (err) {
                rej(err);
                return;
            }
            res(c);
        }));
        return {
            region: ctx.region,
            credentials: {
                accessKeyId: result.accessKeyId,
                secretAccessKey: result.secretAccessKey,
                sessionToken: result.sessionToken,
            },
        };
    },
})
    .query("getState", {
    async resolve({ ctx }) {
        return ctx.state;
    },
})
    .mutation("deploy", {
    async resolve({ ctx }) {
        return ctx.onDeploy.trigger();
    },
})
    .subscription("onStateChange", {
    async resolve({ ctx }) {
        return new trpc.Subscription((emit) => {
            const fn = ctx.onStateChange.add(emit.data);
            return () => {
                ctx.onStateChange.remove(fn);
            };
        });
    },
});
