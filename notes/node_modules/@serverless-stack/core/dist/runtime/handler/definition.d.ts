import { AssetCode } from "aws-cdk-lib/aws-lambda";
export declare type Command = {
    command: string;
    args: string[];
    env: Record<string, string>;
};
declare type BundleResult = {
    handler: string;
} & ({
    asset: AssetCode;
} | {
    directory: string;
});
export declare type Instructions = {
    shouldBuild?: (files: string[]) => boolean;
    build: () => Promise<Issue[]>;
    bundle: () => BundleResult;
    run: Command;
    watcher: {
        include: string[];
        ignore: string[];
    };
    checks?: Record<string, () => Promise<Issue[]>>;
};
export declare type Issue = {
    location: {
        file: string;
        column?: number;
        line?: number;
        length?: number;
    };
    message: string;
};
export declare type Opts<T = any> = {
    id: string;
    root: string;
    runtime: string;
    srcPath: string;
    handler: string;
    bundle?: T | false;
};
export declare type Definition<T = any> = (opts: Opts<T>) => Instructions;
export declare function buildAsync(opts: Opts, cmd: Command): Promise<Issue[]>;
export declare function buildSync(opts: Opts, cmd: Command): void;
export {};
