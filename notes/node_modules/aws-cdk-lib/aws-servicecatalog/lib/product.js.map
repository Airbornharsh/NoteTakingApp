{
  "version": 3,
  "sources": ["product.ts"],
  "sourcesContent": ["import { ArnFormat, IResource, Resource, Stack } from '../../core';\nimport { Construct } from 'constructs';\nimport { CloudFormationTemplate } from './cloudformation-template';\nimport { MessageLanguage } from './common';\nimport { AssociationManager } from './private/association-manager';\nimport { InputValidator } from './private/validation';\nimport { CfnCloudFormationProduct } from './servicecatalog.generated';\nimport { TagOptions } from './tag-options';\n\n/**\n * A Service Catalog product, currently only supports type CloudFormationProduct\n */\nexport interface IProduct extends IResource {\n  /**\n   * The ARN of the product.\n   * @attribute\n   */\n  readonly productArn: string;\n\n  /**\n   * The id of the product\n   * @attribute\n   */\n  readonly productId: string;\n\n  /**\n   * Associate Tag Options.\n   * A TagOption is a key-value pair managed in AWS Service Catalog.\n   * It is not an AWS tag, but serves as a template for creating an AWS tag based on the TagOption.\n   */\n  associateTagOptions(tagOptions: TagOptions): void;\n}\n\nabstract class ProductBase extends Resource implements IProduct {\n  public abstract readonly productArn: string;\n  public abstract readonly productId: string;\n\n  public associateTagOptions(tagOptions: TagOptions) {\n    AssociationManager.associateTagOptions(this, this.productId, tagOptions);\n  }\n}\n\n/**\n * Properties of product version (also known as a provisioning artifact).\n */\nexport interface CloudFormationProductVersion {\n  /**\n   * The description of the product version\n   * @default - No description provided\n   */\n  readonly description?: string;\n\n  /**\n   * Whether the specified product template will be validated by CloudFormation.\n   * If turned off, an invalid template configuration can be stored.\n   * @default true\n   */\n  readonly validateTemplate?: boolean;\n\n  /**\n   * The S3 template that points to the provisioning version template\n   */\n  readonly cloudFormationTemplate: CloudFormationTemplate;\n\n  /**\n   * The name of the product version.\n   * @default - No product version name provided\n   */\n  readonly productVersionName?: string;\n}\n\n/**\n * Properties for a Cloudformation Product\n */\nexport interface CloudFormationProductProps {\n  /**\n   * The owner of the product.\n   */\n  readonly owner: string;\n\n  /**\n   * The name of the product.\n   */\n  readonly productName: string;\n\n  /**\n   * The configuration of the product version.\n   */\n  readonly productVersions: CloudFormationProductVersion[];\n\n  /**\n   * The language code.\n   * Controls language for logging and errors.\n   *\n   * @default - English\n   */\n  readonly messageLanguage?: MessageLanguage;\n\n  /**\n   * The description of the product.\n   * @default - No description provided\n   */\n  readonly description?: string;\n\n  /**\n   * The distributor of the product.\n   * @default - No distributor provided\n   */\n  readonly distributor?: string;\n\n  /**\n   * Whether to give provisioning artifacts a new unique identifier when the product attributes or provisioning artifacts is updated\n   * @default false\n   */\n  readonly replaceProductVersionIds?: boolean;\n\n  /**\n   * The support information about the product\n   * @default - No support description provided\n   */\n  readonly supportDescription?: string;\n\n  /**\n   * The contact email for product support.\n   * @default - No support email provided\n   */\n  readonly supportEmail?: string;\n\n  /**\n   * The contact URL for product support.\n   * @default - No support URL provided\n   */\n  readonly supportUrl?: string;\n\n  /**\n   * TagOptions associated directly to a product.\n   *\n   * @default - No tagOptions provided\n   */\n  readonly tagOptions?: TagOptions;\n}\n\n/**\n * Abstract class for Service Catalog Product.\n */\nexport abstract class Product extends ProductBase {\n  /**\n   * Creates a Product construct that represents an external product.\n   * @param scope The parent creating construct (usually `this`).\n   * @param id The construct's name.\n   * @param productArn Product Arn\n   */\n  public static fromProductArn(scope: Construct, id: string, productArn: string): IProduct {\n    const arn = Stack.of(scope).splitArn(productArn, ArnFormat.SLASH_RESOURCE_NAME);\n    const productId = arn.resourceName;\n\n    if (!productId) {\n      throw new Error('Missing required Portfolio ID from Portfolio ARN: ' + productArn);\n    }\n\n    return new class extends ProductBase {\n      public readonly productId = productId!;\n      public readonly productArn = productArn;\n    }(scope, id);\n  }\n}\n\n/**\n * A Service Catalog Cloudformation Product.\n */\nexport class CloudFormationProduct extends Product {\n  public readonly productArn: string;\n  public readonly productId: string;\n\n  constructor(scope: Construct, id: string, props: CloudFormationProductProps) {\n    super(scope, id);\n\n    this.validateProductProps(props);\n\n    const product = new CfnCloudFormationProduct(this, 'Resource', {\n      acceptLanguage: props.messageLanguage,\n      description: props.description,\n      distributor: props.distributor,\n      name: props.productName,\n      owner: props.owner,\n      provisioningArtifactParameters: this.renderProvisioningArtifacts(props),\n      replaceProvisioningArtifacts: props.replaceProductVersionIds,\n      supportDescription: props.supportDescription,\n      supportEmail: props.supportEmail,\n      supportUrl: props.supportUrl,\n    });\n\n    this.productId = product.ref;\n    this.productArn = Stack.of(this).formatArn({\n      service: 'catalog',\n      resource: 'product',\n      resourceName: product.ref,\n    });\n\n    if (props.tagOptions !== undefined) {\n      this.associateTagOptions(props.tagOptions);\n    }\n  }\n\n  private renderProvisioningArtifacts(\n    props: CloudFormationProductProps): CfnCloudFormationProduct.ProvisioningArtifactPropertiesProperty[] {\n    return props.productVersions.map(productVersion => {\n      const template = productVersion.cloudFormationTemplate.bind(this);\n      InputValidator.validateUrl(this.node.path, 'provisioning template url', template.httpUrl);\n      return {\n        name: productVersion.productVersionName,\n        description: productVersion.description,\n        disableTemplateValidation: productVersion.validateTemplate === false ? true : false,\n        info: {\n          LoadTemplateFromURL: template.httpUrl,\n        },\n      };\n    });\n  };\n\n  private validateProductProps(props: CloudFormationProductProps) {\n    InputValidator.validateLength(this.node.path, 'product product name', 1, 100, props.productName);\n    InputValidator.validateLength(this.node.path, 'product owner', 1, 8191, props.owner);\n    InputValidator.validateLength(this.node.path, 'product description', 0, 8191, props.description);\n    InputValidator.validateLength(this.node.path, 'product distributor', 0, 8191, props.distributor);\n    InputValidator.validateEmail(this.node.path, 'support email', props.supportEmail);\n    InputValidator.validateUrl(this.node.path, 'support url', props.supportUrl);\n    InputValidator.validateLength(this.node.path, 'support description', 0, 8191, props.supportDescription);\n    if (props.productVersions.length == 0) {\n      throw new Error(`Invalid product versions for resource ${this.node.path}, must contain at least 1 product version`);\n    }\n    props.productVersions.forEach(productVersion => {\n      InputValidator.validateLength(this.node.path, 'provisioning artifact name', 0, 100, productVersion.productVersionName);\n      InputValidator.validateLength(this.node.path, 'provisioning artifact description', 0, 8191, productVersion.description);\n    });\n  }\n}\n"],
  "mappings": "+OAAA,OAAA,QAAA,YAAA,EAIA,sBAAA,QAAA,+BAAA,EACA,aAAA,QAAA,sBAAA,EACA,2BAAA,QAAA,4BAAA,EA2BA,MAAe,mBAAoB,QAAA,QAAQ,CAIlC,oBAAoB,WAAsB,CAC/C,sBAAA,mBAAmB,oBAAoB,KAAM,KAAK,UAAW,UAAU,GA2G3E,MAAsB,eAAgB,YAAW,OAOjC,gBAAe,MAAkB,GAAY,WAAkB,CAE3E,KAAM,WAAY,AADN,OAAA,MAAM,GAAG,KAAK,EAAE,SAAS,WAAY,OAAA,UAAU,mBAAmB,EACxD,aAEtB,GAAI,CAAC,UACH,KAAM,IAAI,OAAM,qDAAuD,UAAU,EAGnF,MAAO,IAAI,cAAc,YAAW,CAAzB,aAAA,qBACO,KAAA,UAAY,UACZ,KAAA,WAAa,UAC/B,GAAE,MAAO,EAAE,GAlBf,QAAA,QAAA,0GAyBA,MAAa,6BAA8B,QAAO,CAIhD,YAAY,MAAkB,GAAY,MAAiC,CACzE,MAAM,MAAO,EAAE,uOAEf,KAAK,qBAAqB,KAAK,EAE/B,KAAM,SAAU,GAAI,4BAAA,yBAAyB,KAAM,WAAY,CAC7D,eAAgB,MAAM,gBACtB,YAAa,MAAM,YACnB,YAAa,MAAM,YACnB,KAAM,MAAM,YACZ,MAAO,MAAM,MACb,+BAAgC,KAAK,4BAA4B,KAAK,EACtE,6BAA8B,MAAM,yBACpC,mBAAoB,MAAM,mBAC1B,aAAc,MAAM,aACpB,WAAY,MAAM,WACnB,EAED,KAAK,UAAY,QAAQ,IACzB,KAAK,WAAa,OAAA,MAAM,GAAG,IAAI,EAAE,UAAU,CACzC,QAAS,UACT,SAAU,UACV,aAAc,QAAQ,IACvB,EAEG,MAAM,aAAe,QACvB,KAAK,oBAAoB,MAAM,UAAU,EAIrC,4BACN,MAAiC,CACjC,MAAO,OAAM,gBAAgB,IAAI,gBAAiB,CAChD,KAAM,UAAW,eAAe,uBAAuB,KAAK,IAAI,EAChE,oBAAA,eAAe,YAAY,KAAK,KAAK,KAAM,4BAA6B,SAAS,OAAO,EACjF,CACL,KAAM,eAAe,mBACrB,YAAa,eAAe,YAC5B,0BAA2B,eAAe,mBAAqB,GAC/D,KAAM,CACJ,oBAAqB,SAAS,SAGpC,CAAC,EAGK,qBAAqB,MAAiC,CAQ5D,GAPA,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,uBAAwB,EAAG,IAAK,MAAM,WAAW,EAC/F,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,gBAAiB,EAAG,KAAM,MAAM,KAAK,EACnF,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,sBAAuB,EAAG,KAAM,MAAM,WAAW,EAC/F,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,sBAAuB,EAAG,KAAM,MAAM,WAAW,EAC/F,aAAA,eAAe,cAAc,KAAK,KAAK,KAAM,gBAAiB,MAAM,YAAY,EAChF,aAAA,eAAe,YAAY,KAAK,KAAK,KAAM,cAAe,MAAM,UAAU,EAC1E,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,sBAAuB,EAAG,KAAM,MAAM,kBAAkB,EAClG,MAAM,gBAAgB,QAAU,EAClC,KAAM,IAAI,OAAM,yCAAyC,KAAK,KAAK,+CAA+C,EAEpH,MAAM,gBAAgB,QAAQ,gBAAiB,CAC7C,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,6BAA8B,EAAG,IAAK,eAAe,kBAAkB,EACrH,aAAA,eAAe,eAAe,KAAK,KAAK,KAAM,oCAAqC,EAAG,KAAM,eAAe,WAAW,CACxH,CAAC,GAhEL,QAAA,sBAAA",
  "names": []
}
