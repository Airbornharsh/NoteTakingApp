{
  "version": 3,
  "sources": ["iottwinmaker.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-05-11T19:08:11.696Z\",\"fingerprint\":\"5jiiGz36tEHLRjMJCDmkCU9PojP7V5PtGu1BEwRxIHY=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/helpers-internal';\n\n/**\n * Properties for defining a `CfnComponentType`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html\n */\nexport interface CfnComponentTypeProps {\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.ComponentTypeId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-componenttypeid\n     */\n    readonly componentTypeId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-workspaceid\n     */\n    readonly workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-description\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.ExtendsFrom`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-extendsfrom\n     */\n    readonly extendsFrom?: string[];\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.Functions`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-functions\n     */\n    readonly functions?: { [key: string]: (CfnComponentType.FunctionProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.IsSingleton`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-issingleton\n     */\n    readonly isSingleton?: boolean | cdk.IResolvable;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.PropertyDefinitions`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-propertydefinitions\n     */\n    readonly propertyDefinitions?: { [key: string]: (CfnComponentType.PropertyDefinitionProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-tags\n     */\n    readonly tags?: { [key: string]: (string) };\n}\n\n/**\n * Determine whether the given properties match those of a `CfnComponentTypeProps`\n *\n * @param properties - the TypeScript properties of a `CfnComponentTypeProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentTypePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('componentTypeId', cdk.requiredValidator)(properties.componentTypeId));\n    errors.collect(cdk.propertyValidator('componentTypeId', cdk.validateString)(properties.componentTypeId));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('extendsFrom', cdk.listValidator(cdk.validateString))(properties.extendsFrom));\n    errors.collect(cdk.propertyValidator('functions', cdk.hashValidator(CfnComponentType_FunctionPropertyValidator))(properties.functions));\n    errors.collect(cdk.propertyValidator('isSingleton', cdk.validateBoolean)(properties.isSingleton));\n    errors.collect(cdk.propertyValidator('propertyDefinitions', cdk.hashValidator(CfnComponentType_PropertyDefinitionPropertyValidator))(properties.propertyDefinitions));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.requiredValidator)(properties.workspaceId));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.validateString)(properties.workspaceId));\n    return errors.wrap('supplied properties not correct for \"CfnComponentTypeProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType` resource\n *\n * @param properties - the TypeScript properties of a `CfnComponentTypeProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentTypePropsValidator(properties).assertSuccess();\n    return {\n        ComponentTypeId: cdk.stringToCloudFormation(properties.componentTypeId),\n        WorkspaceId: cdk.stringToCloudFormation(properties.workspaceId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        ExtendsFrom: cdk.listMapper(cdk.stringToCloudFormation)(properties.extendsFrom),\n        Functions: cdk.hashMapper(cfnComponentTypeFunctionPropertyToCloudFormation)(properties.functions),\n        IsSingleton: cdk.booleanToCloudFormation(properties.isSingleton),\n        PropertyDefinitions: cdk.hashMapper(cfnComponentTypePropertyDefinitionPropertyToCloudFormation)(properties.propertyDefinitions),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentTypeProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentTypeProps>();\n    ret.addPropertyResult('componentTypeId', 'ComponentTypeId', cfn_parse.FromCloudFormation.getString(properties.ComponentTypeId));\n    ret.addPropertyResult('workspaceId', 'WorkspaceId', cfn_parse.FromCloudFormation.getString(properties.WorkspaceId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('extendsFrom', 'ExtendsFrom', properties.ExtendsFrom != null ? cfn_parse.FromCloudFormation.getStringArray(properties.ExtendsFrom) : undefined);\n    ret.addPropertyResult('functions', 'Functions', properties.Functions != null ? cfn_parse.FromCloudFormation.getMap(CfnComponentTypeFunctionPropertyFromCloudFormation)(properties.Functions) : undefined);\n    ret.addPropertyResult('isSingleton', 'IsSingleton', properties.IsSingleton != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsSingleton) : undefined);\n    ret.addPropertyResult('propertyDefinitions', 'PropertyDefinitions', properties.PropertyDefinitions != null ? cfn_parse.FromCloudFormation.getMap(CfnComponentTypePropertyDefinitionPropertyFromCloudFormation)(properties.PropertyDefinitions) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::IoTTwinMaker::ComponentType`\n *\n *\n *\n * @cloudformationResource AWS::IoTTwinMaker::ComponentType\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html\n */\nexport class CfnComponentType extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::IoTTwinMaker::ComponentType\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnComponentType {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnComponentTypePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnComponentType(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     *\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     *\n     * @cloudformationAttribute CreationDateTime\n     */\n    public readonly attrCreationDateTime: string;\n\n    /**\n     *\n     * @cloudformationAttribute IsAbstract\n     */\n    public readonly attrIsAbstract: cdk.IResolvable;\n\n    /**\n     *\n     * @cloudformationAttribute IsSchemaInitialized\n     */\n    public readonly attrIsSchemaInitialized: cdk.IResolvable;\n\n    /**\n     *\n     * @cloudformationAttribute UpdateDateTime\n     */\n    public readonly attrUpdateDateTime: string;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.ComponentTypeId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-componenttypeid\n     */\n    public componentTypeId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-workspaceid\n     */\n    public workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-description\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.ExtendsFrom`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-extendsfrom\n     */\n    public extendsFrom: string[] | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.Functions`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-functions\n     */\n    public functions: { [key: string]: (CfnComponentType.FunctionProperty | cdk.IResolvable) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.IsSingleton`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-issingleton\n     */\n    public isSingleton: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.PropertyDefinitions`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-propertydefinitions\n     */\n    public propertyDefinitions: { [key: string]: (CfnComponentType.PropertyDefinitionProperty | cdk.IResolvable) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::ComponentType.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-componenttype.html#cfn-iottwinmaker-componenttype-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::IoTTwinMaker::ComponentType`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnComponentTypeProps) {\n        super(scope, id, { type: CfnComponentType.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'componentTypeId', this);\n        cdk.requireProperty(props, 'workspaceId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreationDateTime = cdk.Token.asString(this.getAtt('CreationDateTime'));\n        this.attrIsAbstract = this.getAtt('IsAbstract');\n        this.attrIsSchemaInitialized = this.getAtt('IsSchemaInitialized');\n        this.attrUpdateDateTime = cdk.Token.asString(this.getAtt('UpdateDateTime'));\n\n        this.componentTypeId = props.componentTypeId;\n        this.workspaceId = props.workspaceId;\n        this.description = props.description;\n        this.extendsFrom = props.extendsFrom;\n        this.functions = props.functions;\n        this.isSingleton = props.isSingleton;\n        this.propertyDefinitions = props.propertyDefinitions;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::IoTTwinMaker::ComponentType\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnComponentType.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            componentTypeId: this.componentTypeId,\n            workspaceId: this.workspaceId,\n            description: this.description,\n            extendsFrom: this.extendsFrom,\n            functions: this.functions,\n            isSingleton: this.isSingleton,\n            propertyDefinitions: this.propertyDefinitions,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnComponentTypePropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-dataconnector.html\n     */\n    export interface DataConnectorProperty {\n        /**\n         * `CfnComponentType.DataConnectorProperty.IsNative`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-dataconnector.html#cfn-iottwinmaker-componenttype-dataconnector-isnative\n         */\n        readonly isNative?: boolean | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataConnectorProperty.Lambda`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-dataconnector.html#cfn-iottwinmaker-componenttype-dataconnector-lambda\n         */\n        readonly lambda?: CfnComponentType.LambdaFunctionProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DataConnectorProperty`\n *\n * @param properties - the TypeScript properties of a `DataConnectorProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_DataConnectorPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('isNative', cdk.validateBoolean)(properties.isNative));\n    errors.collect(cdk.propertyValidator('lambda', CfnComponentType_LambdaFunctionPropertyValidator)(properties.lambda));\n    return errors.wrap('supplied properties not correct for \"DataConnectorProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.DataConnector` resource\n *\n * @param properties - the TypeScript properties of a `DataConnectorProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.DataConnector` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypeDataConnectorPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_DataConnectorPropertyValidator(properties).assertSuccess();\n    return {\n        IsNative: cdk.booleanToCloudFormation(properties.isNative),\n        Lambda: cfnComponentTypeLambdaFunctionPropertyToCloudFormation(properties.lambda),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypeDataConnectorPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.DataConnectorProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.DataConnectorProperty>();\n    ret.addPropertyResult('isNative', 'IsNative', properties.IsNative != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsNative) : undefined);\n    ret.addPropertyResult('lambda', 'Lambda', properties.Lambda != null ? CfnComponentTypeLambdaFunctionPropertyFromCloudFormation(properties.Lambda) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datatype.html\n     */\n    export interface DataTypeProperty {\n        /**\n         * `CfnComponentType.DataTypeProperty.AllowedValues`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datatype.html#cfn-iottwinmaker-componenttype-datatype-allowedvalues\n         */\n        readonly allowedValues?: Array<CfnComponentType.DataValueProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataTypeProperty.NestedType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datatype.html#cfn-iottwinmaker-componenttype-datatype-nestedtype\n         */\n        readonly nestedType?: CfnComponentType.DataTypeProperty | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataTypeProperty.Relationship`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datatype.html#cfn-iottwinmaker-componenttype-datatype-relationship\n         */\n        readonly relationship?: CfnComponentType.RelationshipProperty | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataTypeProperty.Type`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datatype.html#cfn-iottwinmaker-componenttype-datatype-type\n         */\n        readonly type: string;\n        /**\n         * `CfnComponentType.DataTypeProperty.UnitOfMeasure`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datatype.html#cfn-iottwinmaker-componenttype-datatype-unitofmeasure\n         */\n        readonly unitOfMeasure?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DataTypeProperty`\n *\n * @param properties - the TypeScript properties of a `DataTypeProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_DataTypePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allowedValues', cdk.listValidator(CfnComponentType_DataValuePropertyValidator))(properties.allowedValues));\n    errors.collect(cdk.propertyValidator('nestedType', CfnComponentType_DataTypePropertyValidator)(properties.nestedType));\n    errors.collect(cdk.propertyValidator('relationship', CfnComponentType_RelationshipPropertyValidator)(properties.relationship));\n    errors.collect(cdk.propertyValidator('type', cdk.requiredValidator)(properties.type));\n    errors.collect(cdk.propertyValidator('type', cdk.validateString)(properties.type));\n    errors.collect(cdk.propertyValidator('unitOfMeasure', cdk.validateString)(properties.unitOfMeasure));\n    return errors.wrap('supplied properties not correct for \"DataTypeProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.DataType` resource\n *\n * @param properties - the TypeScript properties of a `DataTypeProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.DataType` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypeDataTypePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_DataTypePropertyValidator(properties).assertSuccess();\n    return {\n        AllowedValues: cdk.listMapper(cfnComponentTypeDataValuePropertyToCloudFormation)(properties.allowedValues),\n        NestedType: cfnComponentTypeDataTypePropertyToCloudFormation(properties.nestedType),\n        Relationship: cfnComponentTypeRelationshipPropertyToCloudFormation(properties.relationship),\n        Type: cdk.stringToCloudFormation(properties.type),\n        UnitOfMeasure: cdk.stringToCloudFormation(properties.unitOfMeasure),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypeDataTypePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.DataTypeProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.DataTypeProperty>();\n    ret.addPropertyResult('allowedValues', 'AllowedValues', properties.AllowedValues != null ? cfn_parse.FromCloudFormation.getArray(CfnComponentTypeDataValuePropertyFromCloudFormation)(properties.AllowedValues) : undefined);\n    ret.addPropertyResult('nestedType', 'NestedType', properties.NestedType != null ? CfnComponentTypeDataTypePropertyFromCloudFormation(properties.NestedType) : undefined);\n    ret.addPropertyResult('relationship', 'Relationship', properties.Relationship != null ? CfnComponentTypeRelationshipPropertyFromCloudFormation(properties.Relationship) : undefined);\n    ret.addPropertyResult('type', 'Type', cfn_parse.FromCloudFormation.getString(properties.Type));\n    ret.addPropertyResult('unitOfMeasure', 'UnitOfMeasure', properties.UnitOfMeasure != null ? cfn_parse.FromCloudFormation.getString(properties.UnitOfMeasure) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html\n     */\n    export interface DataValueProperty {\n        /**\n         * `CfnComponentType.DataValueProperty.BooleanValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-booleanvalue\n         */\n        readonly booleanValue?: boolean | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataValueProperty.DoubleValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-doublevalue\n         */\n        readonly doubleValue?: number;\n        /**\n         * `CfnComponentType.DataValueProperty.Expression`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-expression\n         */\n        readonly expression?: string;\n        /**\n         * `CfnComponentType.DataValueProperty.IntegerValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-integervalue\n         */\n        readonly integerValue?: number;\n        /**\n         * `CfnComponentType.DataValueProperty.ListValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-listvalue\n         */\n        readonly listValue?: Array<CfnComponentType.DataValueProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataValueProperty.LongValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-longvalue\n         */\n        readonly longValue?: number;\n        /**\n         * `CfnComponentType.DataValueProperty.MapValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-mapvalue\n         */\n        readonly mapValue?: { [key: string]: (CfnComponentType.DataValueProperty | cdk.IResolvable) } | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataValueProperty.RelationshipValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-relationshipvalue\n         */\n        readonly relationshipValue?: any | cdk.IResolvable;\n        /**\n         * `CfnComponentType.DataValueProperty.StringValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-datavalue.html#cfn-iottwinmaker-componenttype-datavalue-stringvalue\n         */\n        readonly stringValue?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DataValueProperty`\n *\n * @param properties - the TypeScript properties of a `DataValueProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_DataValuePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('booleanValue', cdk.validateBoolean)(properties.booleanValue));\n    errors.collect(cdk.propertyValidator('doubleValue', cdk.validateNumber)(properties.doubleValue));\n    errors.collect(cdk.propertyValidator('expression', cdk.validateString)(properties.expression));\n    errors.collect(cdk.propertyValidator('integerValue', cdk.validateNumber)(properties.integerValue));\n    errors.collect(cdk.propertyValidator('listValue', cdk.listValidator(CfnComponentType_DataValuePropertyValidator))(properties.listValue));\n    errors.collect(cdk.propertyValidator('longValue', cdk.validateNumber)(properties.longValue));\n    errors.collect(cdk.propertyValidator('mapValue', cdk.hashValidator(CfnComponentType_DataValuePropertyValidator))(properties.mapValue));\n    errors.collect(cdk.propertyValidator('relationshipValue', cdk.validateObject)(properties.relationshipValue));\n    errors.collect(cdk.propertyValidator('stringValue', cdk.validateString)(properties.stringValue));\n    return errors.wrap('supplied properties not correct for \"DataValueProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.DataValue` resource\n *\n * @param properties - the TypeScript properties of a `DataValueProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.DataValue` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypeDataValuePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_DataValuePropertyValidator(properties).assertSuccess();\n    return {\n        BooleanValue: cdk.booleanToCloudFormation(properties.booleanValue),\n        DoubleValue: cdk.numberToCloudFormation(properties.doubleValue),\n        Expression: cdk.stringToCloudFormation(properties.expression),\n        IntegerValue: cdk.numberToCloudFormation(properties.integerValue),\n        ListValue: cdk.listMapper(cfnComponentTypeDataValuePropertyToCloudFormation)(properties.listValue),\n        LongValue: cdk.numberToCloudFormation(properties.longValue),\n        MapValue: cdk.hashMapper(cfnComponentTypeDataValuePropertyToCloudFormation)(properties.mapValue),\n        RelationshipValue: cdk.objectToCloudFormation(properties.relationshipValue),\n        StringValue: cdk.stringToCloudFormation(properties.stringValue),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypeDataValuePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.DataValueProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.DataValueProperty>();\n    ret.addPropertyResult('booleanValue', 'BooleanValue', properties.BooleanValue != null ? cfn_parse.FromCloudFormation.getBoolean(properties.BooleanValue) : undefined);\n    ret.addPropertyResult('doubleValue', 'DoubleValue', properties.DoubleValue != null ? cfn_parse.FromCloudFormation.getNumber(properties.DoubleValue) : undefined);\n    ret.addPropertyResult('expression', 'Expression', properties.Expression != null ? cfn_parse.FromCloudFormation.getString(properties.Expression) : undefined);\n    ret.addPropertyResult('integerValue', 'IntegerValue', properties.IntegerValue != null ? cfn_parse.FromCloudFormation.getNumber(properties.IntegerValue) : undefined);\n    ret.addPropertyResult('listValue', 'ListValue', properties.ListValue != null ? cfn_parse.FromCloudFormation.getArray(CfnComponentTypeDataValuePropertyFromCloudFormation)(properties.ListValue) : undefined);\n    ret.addPropertyResult('longValue', 'LongValue', properties.LongValue != null ? cfn_parse.FromCloudFormation.getNumber(properties.LongValue) : undefined);\n    ret.addPropertyResult('mapValue', 'MapValue', properties.MapValue != null ? cfn_parse.FromCloudFormation.getMap(CfnComponentTypeDataValuePropertyFromCloudFormation)(properties.MapValue) : undefined);\n    ret.addPropertyResult('relationshipValue', 'RelationshipValue', properties.RelationshipValue != null ? cfn_parse.FromCloudFormation.getAny(properties.RelationshipValue) : undefined);\n    ret.addPropertyResult('stringValue', 'StringValue', properties.StringValue != null ? cfn_parse.FromCloudFormation.getString(properties.StringValue) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-function.html\n     */\n    export interface FunctionProperty {\n        /**\n         * `CfnComponentType.FunctionProperty.ImplementedBy`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-function.html#cfn-iottwinmaker-componenttype-function-implementedby\n         */\n        readonly implementedBy?: CfnComponentType.DataConnectorProperty | cdk.IResolvable;\n        /**\n         * `CfnComponentType.FunctionProperty.RequiredProperties`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-function.html#cfn-iottwinmaker-componenttype-function-requiredproperties\n         */\n        readonly requiredProperties?: string[];\n        /**\n         * `CfnComponentType.FunctionProperty.Scope`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-function.html#cfn-iottwinmaker-componenttype-function-scope\n         */\n        readonly scope?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `FunctionProperty`\n *\n * @param properties - the TypeScript properties of a `FunctionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_FunctionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('implementedBy', CfnComponentType_DataConnectorPropertyValidator)(properties.implementedBy));\n    errors.collect(cdk.propertyValidator('requiredProperties', cdk.listValidator(cdk.validateString))(properties.requiredProperties));\n    errors.collect(cdk.propertyValidator('scope', cdk.validateString)(properties.scope));\n    return errors.wrap('supplied properties not correct for \"FunctionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.Function` resource\n *\n * @param properties - the TypeScript properties of a `FunctionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.Function` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypeFunctionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_FunctionPropertyValidator(properties).assertSuccess();\n    return {\n        ImplementedBy: cfnComponentTypeDataConnectorPropertyToCloudFormation(properties.implementedBy),\n        RequiredProperties: cdk.listMapper(cdk.stringToCloudFormation)(properties.requiredProperties),\n        Scope: cdk.stringToCloudFormation(properties.scope),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypeFunctionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.FunctionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.FunctionProperty>();\n    ret.addPropertyResult('implementedBy', 'ImplementedBy', properties.ImplementedBy != null ? CfnComponentTypeDataConnectorPropertyFromCloudFormation(properties.ImplementedBy) : undefined);\n    ret.addPropertyResult('requiredProperties', 'RequiredProperties', properties.RequiredProperties != null ? cfn_parse.FromCloudFormation.getStringArray(properties.RequiredProperties) : undefined);\n    ret.addPropertyResult('scope', 'Scope', properties.Scope != null ? cfn_parse.FromCloudFormation.getString(properties.Scope) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-lambdafunction.html\n     */\n    export interface LambdaFunctionProperty {\n        /**\n         * `CfnComponentType.LambdaFunctionProperty.Arn`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-lambdafunction.html#cfn-iottwinmaker-componenttype-lambdafunction-arn\n         */\n        readonly arn: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `LambdaFunctionProperty`\n *\n * @param properties - the TypeScript properties of a `LambdaFunctionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_LambdaFunctionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('arn', cdk.requiredValidator)(properties.arn));\n    errors.collect(cdk.propertyValidator('arn', cdk.validateString)(properties.arn));\n    return errors.wrap('supplied properties not correct for \"LambdaFunctionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.LambdaFunction` resource\n *\n * @param properties - the TypeScript properties of a `LambdaFunctionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.LambdaFunction` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypeLambdaFunctionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_LambdaFunctionPropertyValidator(properties).assertSuccess();\n    return {\n        Arn: cdk.stringToCloudFormation(properties.arn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypeLambdaFunctionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.LambdaFunctionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.LambdaFunctionProperty>();\n    ret.addPropertyResult('arn', 'Arn', cfn_parse.FromCloudFormation.getString(properties.Arn));\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html\n     */\n    export interface PropertyDefinitionProperty {\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.Configurations`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-configurations\n         */\n        readonly configurations?: { [key: string]: (string) } | cdk.IResolvable;\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.DataType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-datatype\n         */\n        readonly dataType?: CfnComponentType.DataTypeProperty | cdk.IResolvable;\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.DefaultValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-defaultvalue\n         */\n        readonly defaultValue?: CfnComponentType.DataValueProperty | cdk.IResolvable;\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.IsExternalId`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-isexternalid\n         */\n        readonly isExternalId?: boolean | cdk.IResolvable;\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.IsRequiredInEntity`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-isrequiredinentity\n         */\n        readonly isRequiredInEntity?: boolean | cdk.IResolvable;\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.IsStoredExternally`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-isstoredexternally\n         */\n        readonly isStoredExternally?: boolean | cdk.IResolvable;\n        /**\n         * `CfnComponentType.PropertyDefinitionProperty.IsTimeSeries`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-propertydefinition.html#cfn-iottwinmaker-componenttype-propertydefinition-istimeseries\n         */\n        readonly isTimeSeries?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PropertyDefinitionProperty`\n *\n * @param properties - the TypeScript properties of a `PropertyDefinitionProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_PropertyDefinitionPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('configurations', cdk.hashValidator(cdk.validateString))(properties.configurations));\n    errors.collect(cdk.propertyValidator('dataType', CfnComponentType_DataTypePropertyValidator)(properties.dataType));\n    errors.collect(cdk.propertyValidator('defaultValue', CfnComponentType_DataValuePropertyValidator)(properties.defaultValue));\n    errors.collect(cdk.propertyValidator('isExternalId', cdk.validateBoolean)(properties.isExternalId));\n    errors.collect(cdk.propertyValidator('isRequiredInEntity', cdk.validateBoolean)(properties.isRequiredInEntity));\n    errors.collect(cdk.propertyValidator('isStoredExternally', cdk.validateBoolean)(properties.isStoredExternally));\n    errors.collect(cdk.propertyValidator('isTimeSeries', cdk.validateBoolean)(properties.isTimeSeries));\n    return errors.wrap('supplied properties not correct for \"PropertyDefinitionProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.PropertyDefinition` resource\n *\n * @param properties - the TypeScript properties of a `PropertyDefinitionProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.PropertyDefinition` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypePropertyDefinitionPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_PropertyDefinitionPropertyValidator(properties).assertSuccess();\n    return {\n        Configurations: cdk.hashMapper(cdk.stringToCloudFormation)(properties.configurations),\n        DataType: cfnComponentTypeDataTypePropertyToCloudFormation(properties.dataType),\n        DefaultValue: cfnComponentTypeDataValuePropertyToCloudFormation(properties.defaultValue),\n        IsExternalId: cdk.booleanToCloudFormation(properties.isExternalId),\n        IsRequiredInEntity: cdk.booleanToCloudFormation(properties.isRequiredInEntity),\n        IsStoredExternally: cdk.booleanToCloudFormation(properties.isStoredExternally),\n        IsTimeSeries: cdk.booleanToCloudFormation(properties.isTimeSeries),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypePropertyDefinitionPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.PropertyDefinitionProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.PropertyDefinitionProperty>();\n    ret.addPropertyResult('configurations', 'Configurations', properties.Configurations != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Configurations) : undefined);\n    ret.addPropertyResult('dataType', 'DataType', properties.DataType != null ? CfnComponentTypeDataTypePropertyFromCloudFormation(properties.DataType) : undefined);\n    ret.addPropertyResult('defaultValue', 'DefaultValue', properties.DefaultValue != null ? CfnComponentTypeDataValuePropertyFromCloudFormation(properties.DefaultValue) : undefined);\n    ret.addPropertyResult('isExternalId', 'IsExternalId', properties.IsExternalId != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsExternalId) : undefined);\n    ret.addPropertyResult('isRequiredInEntity', 'IsRequiredInEntity', properties.IsRequiredInEntity != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsRequiredInEntity) : undefined);\n    ret.addPropertyResult('isStoredExternally', 'IsStoredExternally', properties.IsStoredExternally != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsStoredExternally) : undefined);\n    ret.addPropertyResult('isTimeSeries', 'IsTimeSeries', properties.IsTimeSeries != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IsTimeSeries) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnComponentType {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-relationship.html\n     */\n    export interface RelationshipProperty {\n        /**\n         * `CfnComponentType.RelationshipProperty.RelationshipType`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-relationship.html#cfn-iottwinmaker-componenttype-relationship-relationshiptype\n         */\n        readonly relationshipType?: string;\n        /**\n         * `CfnComponentType.RelationshipProperty.TargetComponentTypeId`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-componenttype-relationship.html#cfn-iottwinmaker-componenttype-relationship-targetcomponenttypeid\n         */\n        readonly targetComponentTypeId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RelationshipProperty`\n *\n * @param properties - the TypeScript properties of a `RelationshipProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnComponentType_RelationshipPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('relationshipType', cdk.validateString)(properties.relationshipType));\n    errors.collect(cdk.propertyValidator('targetComponentTypeId', cdk.validateString)(properties.targetComponentTypeId));\n    return errors.wrap('supplied properties not correct for \"RelationshipProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.Relationship` resource\n *\n * @param properties - the TypeScript properties of a `RelationshipProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::ComponentType.Relationship` resource.\n */\n// @ts-ignore TS6133\nfunction cfnComponentTypeRelationshipPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnComponentType_RelationshipPropertyValidator(properties).assertSuccess();\n    return {\n        RelationshipType: cdk.stringToCloudFormation(properties.relationshipType),\n        TargetComponentTypeId: cdk.stringToCloudFormation(properties.targetComponentTypeId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnComponentTypeRelationshipPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnComponentType.RelationshipProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnComponentType.RelationshipProperty>();\n    ret.addPropertyResult('relationshipType', 'RelationshipType', properties.RelationshipType != null ? cfn_parse.FromCloudFormation.getString(properties.RelationshipType) : undefined);\n    ret.addPropertyResult('targetComponentTypeId', 'TargetComponentTypeId', properties.TargetComponentTypeId != null ? cfn_parse.FromCloudFormation.getString(properties.TargetComponentTypeId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnEntity`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html\n */\nexport interface CfnEntityProps {\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.EntityName`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityname\n     */\n    readonly entityName: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-workspaceid\n     */\n    readonly workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.Components`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-components\n     */\n    readonly components?: { [key: string]: (CfnEntity.ComponentProperty | cdk.IResolvable) } | cdk.IResolvable;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-description\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.EntityId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityid\n     */\n    readonly entityId?: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.ParentEntityId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-parententityid\n     */\n    readonly parentEntityId?: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-tags\n     */\n    readonly tags?: { [key: string]: (string) };\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEntityProps`\n *\n * @param properties - the TypeScript properties of a `CfnEntityProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEntityPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('components', cdk.hashValidator(CfnEntity_ComponentPropertyValidator))(properties.components));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('entityId', cdk.validateString)(properties.entityId));\n    errors.collect(cdk.propertyValidator('entityName', cdk.requiredValidator)(properties.entityName));\n    errors.collect(cdk.propertyValidator('entityName', cdk.validateString)(properties.entityName));\n    errors.collect(cdk.propertyValidator('parentEntityId', cdk.validateString)(properties.parentEntityId));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.requiredValidator)(properties.workspaceId));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.validateString)(properties.workspaceId));\n    return errors.wrap('supplied properties not correct for \"CfnEntityProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity` resource\n *\n * @param properties - the TypeScript properties of a `CfnEntityProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEntityPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEntityPropsValidator(properties).assertSuccess();\n    return {\n        EntityName: cdk.stringToCloudFormation(properties.entityName),\n        WorkspaceId: cdk.stringToCloudFormation(properties.workspaceId),\n        Components: cdk.hashMapper(cfnEntityComponentPropertyToCloudFormation)(properties.components),\n        Description: cdk.stringToCloudFormation(properties.description),\n        EntityId: cdk.stringToCloudFormation(properties.entityId),\n        ParentEntityId: cdk.stringToCloudFormation(properties.parentEntityId),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEntityPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEntityProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEntityProps>();\n    ret.addPropertyResult('entityName', 'EntityName', cfn_parse.FromCloudFormation.getString(properties.EntityName));\n    ret.addPropertyResult('workspaceId', 'WorkspaceId', cfn_parse.FromCloudFormation.getString(properties.WorkspaceId));\n    ret.addPropertyResult('components', 'Components', properties.Components != null ? cfn_parse.FromCloudFormation.getMap(CfnEntityComponentPropertyFromCloudFormation)(properties.Components) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('entityId', 'EntityId', properties.EntityId != null ? cfn_parse.FromCloudFormation.getString(properties.EntityId) : undefined);\n    ret.addPropertyResult('parentEntityId', 'ParentEntityId', properties.ParentEntityId != null ? cfn_parse.FromCloudFormation.getString(properties.ParentEntityId) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::IoTTwinMaker::Entity`\n *\n *\n *\n * @cloudformationResource AWS::IoTTwinMaker::Entity\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html\n */\nexport class CfnEntity extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::IoTTwinMaker::Entity\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEntity {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEntityPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEntity(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     *\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     *\n     * @cloudformationAttribute CreationDateTime\n     */\n    public readonly attrCreationDateTime: string;\n\n    /**\n     *\n     * @cloudformationAttribute HasChildEntities\n     */\n    public readonly attrHasChildEntities: cdk.IResolvable;\n\n    /**\n     *\n     * @cloudformationAttribute UpdateDateTime\n     */\n    public readonly attrUpdateDateTime: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.EntityName`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityname\n     */\n    public entityName: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-workspaceid\n     */\n    public workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.Components`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-components\n     */\n    public components: { [key: string]: (CfnEntity.ComponentProperty | cdk.IResolvable) } | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-description\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.EntityId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityid\n     */\n    public entityId: string | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.ParentEntityId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-parententityid\n     */\n    public parentEntityId: string | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Entity.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::IoTTwinMaker::Entity`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEntityProps) {\n        super(scope, id, { type: CfnEntity.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'entityName', this);\n        cdk.requireProperty(props, 'workspaceId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreationDateTime = cdk.Token.asString(this.getAtt('CreationDateTime'));\n        this.attrHasChildEntities = this.getAtt('HasChildEntities');\n        this.attrUpdateDateTime = cdk.Token.asString(this.getAtt('UpdateDateTime'));\n\n        this.entityName = props.entityName;\n        this.workspaceId = props.workspaceId;\n        this.components = props.components;\n        this.description = props.description;\n        this.entityId = props.entityId;\n        this.parentEntityId = props.parentEntityId;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::IoTTwinMaker::Entity\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEntity.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            entityName: this.entityName,\n            workspaceId: this.workspaceId,\n            components: this.components,\n            description: this.description,\n            entityId: this.entityId,\n            parentEntityId: this.parentEntityId,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEntityPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnEntity {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html\n     */\n    export interface ComponentProperty {\n        /**\n         * `CfnEntity.ComponentProperty.ComponentName`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html#cfn-iottwinmaker-entity-component-componentname\n         */\n        readonly componentName?: string;\n        /**\n         * `CfnEntity.ComponentProperty.ComponentTypeId`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html#cfn-iottwinmaker-entity-component-componenttypeid\n         */\n        readonly componentTypeId?: string;\n        /**\n         * `CfnEntity.ComponentProperty.DefinedIn`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html#cfn-iottwinmaker-entity-component-definedin\n         */\n        readonly definedIn?: string;\n        /**\n         * `CfnEntity.ComponentProperty.Description`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html#cfn-iottwinmaker-entity-component-description\n         */\n        readonly description?: string;\n        /**\n         * `CfnEntity.ComponentProperty.Properties`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html#cfn-iottwinmaker-entity-component-properties\n         */\n        readonly properties?: { [key: string]: (CfnEntity.PropertyProperty | cdk.IResolvable) } | cdk.IResolvable;\n        /**\n         * `CfnEntity.ComponentProperty.Status`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-component.html#cfn-iottwinmaker-entity-component-status\n         */\n        readonly status?: CfnEntity.StatusProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ComponentProperty`\n *\n * @param properties - the TypeScript properties of a `ComponentProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEntity_ComponentPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('componentName', cdk.validateString)(properties.componentName));\n    errors.collect(cdk.propertyValidator('componentTypeId', cdk.validateString)(properties.componentTypeId));\n    errors.collect(cdk.propertyValidator('definedIn', cdk.validateString)(properties.definedIn));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('properties', cdk.hashValidator(CfnEntity_PropertyPropertyValidator))(properties.properties));\n    errors.collect(cdk.propertyValidator('status', CfnEntity_StatusPropertyValidator)(properties.status));\n    return errors.wrap('supplied properties not correct for \"ComponentProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.Component` resource\n *\n * @param properties - the TypeScript properties of a `ComponentProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.Component` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEntityComponentPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEntity_ComponentPropertyValidator(properties).assertSuccess();\n    return {\n        ComponentName: cdk.stringToCloudFormation(properties.componentName),\n        ComponentTypeId: cdk.stringToCloudFormation(properties.componentTypeId),\n        DefinedIn: cdk.stringToCloudFormation(properties.definedIn),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Properties: cdk.hashMapper(cfnEntityPropertyPropertyToCloudFormation)(properties.properties),\n        Status: cfnEntityStatusPropertyToCloudFormation(properties.status),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEntityComponentPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEntity.ComponentProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEntity.ComponentProperty>();\n    ret.addPropertyResult('componentName', 'ComponentName', properties.ComponentName != null ? cfn_parse.FromCloudFormation.getString(properties.ComponentName) : undefined);\n    ret.addPropertyResult('componentTypeId', 'ComponentTypeId', properties.ComponentTypeId != null ? cfn_parse.FromCloudFormation.getString(properties.ComponentTypeId) : undefined);\n    ret.addPropertyResult('definedIn', 'DefinedIn', properties.DefinedIn != null ? cfn_parse.FromCloudFormation.getString(properties.DefinedIn) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('properties', 'Properties', properties.Properties != null ? cfn_parse.FromCloudFormation.getMap(CfnEntityPropertyPropertyFromCloudFormation)(properties.Properties) : undefined);\n    ret.addPropertyResult('status', 'Status', properties.Status != null ? CfnEntityStatusPropertyFromCloudFormation(properties.Status) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEntity {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html\n     */\n    export interface DataValueProperty {\n        /**\n         * `CfnEntity.DataValueProperty.BooleanValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-booleanvalue\n         */\n        readonly booleanValue?: boolean | cdk.IResolvable;\n        /**\n         * `CfnEntity.DataValueProperty.DoubleValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-doublevalue\n         */\n        readonly doubleValue?: number;\n        /**\n         * `CfnEntity.DataValueProperty.Expression`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-expression\n         */\n        readonly expression?: string;\n        /**\n         * `CfnEntity.DataValueProperty.IntegerValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-integervalue\n         */\n        readonly integerValue?: number;\n        /**\n         * `CfnEntity.DataValueProperty.ListValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-listvalue\n         */\n        readonly listValue?: Array<CfnEntity.DataValueProperty | cdk.IResolvable> | cdk.IResolvable;\n        /**\n         * `CfnEntity.DataValueProperty.LongValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-longvalue\n         */\n        readonly longValue?: number;\n        /**\n         * `CfnEntity.DataValueProperty.MapValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-mapvalue\n         */\n        readonly mapValue?: { [key: string]: (CfnEntity.DataValueProperty | cdk.IResolvable) } | cdk.IResolvable;\n        /**\n         * `CfnEntity.DataValueProperty.RelationshipValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-relationshipvalue\n         */\n        readonly relationshipValue?: any | cdk.IResolvable;\n        /**\n         * `CfnEntity.DataValueProperty.StringValue`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-datavalue.html#cfn-iottwinmaker-entity-datavalue-stringvalue\n         */\n        readonly stringValue?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DataValueProperty`\n *\n * @param properties - the TypeScript properties of a `DataValueProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEntity_DataValuePropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('booleanValue', cdk.validateBoolean)(properties.booleanValue));\n    errors.collect(cdk.propertyValidator('doubleValue', cdk.validateNumber)(properties.doubleValue));\n    errors.collect(cdk.propertyValidator('expression', cdk.validateString)(properties.expression));\n    errors.collect(cdk.propertyValidator('integerValue', cdk.validateNumber)(properties.integerValue));\n    errors.collect(cdk.propertyValidator('listValue', cdk.listValidator(CfnEntity_DataValuePropertyValidator))(properties.listValue));\n    errors.collect(cdk.propertyValidator('longValue', cdk.validateNumber)(properties.longValue));\n    errors.collect(cdk.propertyValidator('mapValue', cdk.hashValidator(CfnEntity_DataValuePropertyValidator))(properties.mapValue));\n    errors.collect(cdk.propertyValidator('relationshipValue', cdk.validateObject)(properties.relationshipValue));\n    errors.collect(cdk.propertyValidator('stringValue', cdk.validateString)(properties.stringValue));\n    return errors.wrap('supplied properties not correct for \"DataValueProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.DataValue` resource\n *\n * @param properties - the TypeScript properties of a `DataValueProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.DataValue` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEntityDataValuePropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEntity_DataValuePropertyValidator(properties).assertSuccess();\n    return {\n        BooleanValue: cdk.booleanToCloudFormation(properties.booleanValue),\n        DoubleValue: cdk.numberToCloudFormation(properties.doubleValue),\n        Expression: cdk.stringToCloudFormation(properties.expression),\n        IntegerValue: cdk.numberToCloudFormation(properties.integerValue),\n        ListValue: cdk.listMapper(cfnEntityDataValuePropertyToCloudFormation)(properties.listValue),\n        LongValue: cdk.numberToCloudFormation(properties.longValue),\n        MapValue: cdk.hashMapper(cfnEntityDataValuePropertyToCloudFormation)(properties.mapValue),\n        RelationshipValue: cdk.objectToCloudFormation(properties.relationshipValue),\n        StringValue: cdk.stringToCloudFormation(properties.stringValue),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEntityDataValuePropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEntity.DataValueProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEntity.DataValueProperty>();\n    ret.addPropertyResult('booleanValue', 'BooleanValue', properties.BooleanValue != null ? cfn_parse.FromCloudFormation.getBoolean(properties.BooleanValue) : undefined);\n    ret.addPropertyResult('doubleValue', 'DoubleValue', properties.DoubleValue != null ? cfn_parse.FromCloudFormation.getNumber(properties.DoubleValue) : undefined);\n    ret.addPropertyResult('expression', 'Expression', properties.Expression != null ? cfn_parse.FromCloudFormation.getString(properties.Expression) : undefined);\n    ret.addPropertyResult('integerValue', 'IntegerValue', properties.IntegerValue != null ? cfn_parse.FromCloudFormation.getNumber(properties.IntegerValue) : undefined);\n    ret.addPropertyResult('listValue', 'ListValue', properties.ListValue != null ? cfn_parse.FromCloudFormation.getArray(CfnEntityDataValuePropertyFromCloudFormation)(properties.ListValue) : undefined);\n    ret.addPropertyResult('longValue', 'LongValue', properties.LongValue != null ? cfn_parse.FromCloudFormation.getNumber(properties.LongValue) : undefined);\n    ret.addPropertyResult('mapValue', 'MapValue', properties.MapValue != null ? cfn_parse.FromCloudFormation.getMap(CfnEntityDataValuePropertyFromCloudFormation)(properties.MapValue) : undefined);\n    ret.addPropertyResult('relationshipValue', 'RelationshipValue', properties.RelationshipValue != null ? cfn_parse.FromCloudFormation.getAny(properties.RelationshipValue) : undefined);\n    ret.addPropertyResult('stringValue', 'StringValue', properties.StringValue != null ? cfn_parse.FromCloudFormation.getString(properties.StringValue) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEntity {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-property.html\n     */\n    export interface PropertyProperty {\n        /**\n         * `CfnEntity.PropertyProperty.Definition`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-property.html#cfn-iottwinmaker-entity-property-definition\n         */\n        readonly definition?: any | cdk.IResolvable;\n        /**\n         * `CfnEntity.PropertyProperty.Value`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-property.html#cfn-iottwinmaker-entity-property-value\n         */\n        readonly value?: CfnEntity.DataValueProperty | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PropertyProperty`\n *\n * @param properties - the TypeScript properties of a `PropertyProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEntity_PropertyPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('definition', cdk.validateObject)(properties.definition));\n    errors.collect(cdk.propertyValidator('value', CfnEntity_DataValuePropertyValidator)(properties.value));\n    return errors.wrap('supplied properties not correct for \"PropertyProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.Property` resource\n *\n * @param properties - the TypeScript properties of a `PropertyProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.Property` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEntityPropertyPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEntity_PropertyPropertyValidator(properties).assertSuccess();\n    return {\n        Definition: cdk.objectToCloudFormation(properties.definition),\n        Value: cfnEntityDataValuePropertyToCloudFormation(properties.value),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEntityPropertyPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEntity.PropertyProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEntity.PropertyProperty>();\n    ret.addPropertyResult('definition', 'Definition', properties.Definition != null ? cfn_parse.FromCloudFormation.getAny(properties.Definition) : undefined);\n    ret.addPropertyResult('value', 'Value', properties.Value != null ? CfnEntityDataValuePropertyFromCloudFormation(properties.Value) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEntity {\n    /**\n     *\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-status.html\n     */\n    export interface StatusProperty {\n        /**\n         * `CfnEntity.StatusProperty.Error`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-status.html#cfn-iottwinmaker-entity-status-error\n         */\n        readonly error?: any | cdk.IResolvable;\n        /**\n         * `CfnEntity.StatusProperty.State`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iottwinmaker-entity-status.html#cfn-iottwinmaker-entity-status-state\n         */\n        readonly state?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `StatusProperty`\n *\n * @param properties - the TypeScript properties of a `StatusProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEntity_StatusPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('error', cdk.validateObject)(properties.error));\n    errors.collect(cdk.propertyValidator('state', cdk.validateString)(properties.state));\n    return errors.wrap('supplied properties not correct for \"StatusProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.Status` resource\n *\n * @param properties - the TypeScript properties of a `StatusProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Entity.Status` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEntityStatusPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEntity_StatusPropertyValidator(properties).assertSuccess();\n    return {\n        Error: cdk.objectToCloudFormation(properties.error),\n        State: cdk.stringToCloudFormation(properties.state),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEntityStatusPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEntity.StatusProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEntity.StatusProperty>();\n    ret.addPropertyResult('error', 'Error', properties.Error != null ? cfn_parse.FromCloudFormation.getAny(properties.Error) : undefined);\n    ret.addPropertyResult('state', 'State', properties.State != null ? cfn_parse.FromCloudFormation.getString(properties.State) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnScene`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html\n */\nexport interface CfnSceneProps {\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.ContentLocation`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-contentlocation\n     */\n    readonly contentLocation: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.SceneId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-sceneid\n     */\n    readonly sceneId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-workspaceid\n     */\n    readonly workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.Capabilities`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-capabilities\n     */\n    readonly capabilities?: string[];\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-description\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-tags\n     */\n    readonly tags?: { [key: string]: (string) };\n}\n\n/**\n * Determine whether the given properties match those of a `CfnSceneProps`\n *\n * @param properties - the TypeScript properties of a `CfnSceneProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnScenePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('capabilities', cdk.listValidator(cdk.validateString))(properties.capabilities));\n    errors.collect(cdk.propertyValidator('contentLocation', cdk.requiredValidator)(properties.contentLocation));\n    errors.collect(cdk.propertyValidator('contentLocation', cdk.validateString)(properties.contentLocation));\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('sceneId', cdk.requiredValidator)(properties.sceneId));\n    errors.collect(cdk.propertyValidator('sceneId', cdk.validateString)(properties.sceneId));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.requiredValidator)(properties.workspaceId));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.validateString)(properties.workspaceId));\n    return errors.wrap('supplied properties not correct for \"CfnSceneProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Scene` resource\n *\n * @param properties - the TypeScript properties of a `CfnSceneProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Scene` resource.\n */\n// @ts-ignore TS6133\nfunction cfnScenePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnScenePropsValidator(properties).assertSuccess();\n    return {\n        ContentLocation: cdk.stringToCloudFormation(properties.contentLocation),\n        SceneId: cdk.stringToCloudFormation(properties.sceneId),\n        WorkspaceId: cdk.stringToCloudFormation(properties.workspaceId),\n        Capabilities: cdk.listMapper(cdk.stringToCloudFormation)(properties.capabilities),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnScenePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnSceneProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnSceneProps>();\n    ret.addPropertyResult('contentLocation', 'ContentLocation', cfn_parse.FromCloudFormation.getString(properties.ContentLocation));\n    ret.addPropertyResult('sceneId', 'SceneId', cfn_parse.FromCloudFormation.getString(properties.SceneId));\n    ret.addPropertyResult('workspaceId', 'WorkspaceId', cfn_parse.FromCloudFormation.getString(properties.WorkspaceId));\n    ret.addPropertyResult('capabilities', 'Capabilities', properties.Capabilities != null ? cfn_parse.FromCloudFormation.getStringArray(properties.Capabilities) : undefined);\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::IoTTwinMaker::Scene`\n *\n *\n *\n * @cloudformationResource AWS::IoTTwinMaker::Scene\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html\n */\nexport class CfnScene extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::IoTTwinMaker::Scene\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnScene {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnScenePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnScene(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     *\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     *\n     * @cloudformationAttribute CreationDateTime\n     */\n    public readonly attrCreationDateTime: string;\n\n    /**\n     *\n     * @cloudformationAttribute UpdateDateTime\n     */\n    public readonly attrUpdateDateTime: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.ContentLocation`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-contentlocation\n     */\n    public contentLocation: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.SceneId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-sceneid\n     */\n    public sceneId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-workspaceid\n     */\n    public workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.Capabilities`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-capabilities\n     */\n    public capabilities: string[] | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-description\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Scene.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::IoTTwinMaker::Scene`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnSceneProps) {\n        super(scope, id, { type: CfnScene.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'contentLocation', this);\n        cdk.requireProperty(props, 'sceneId', this);\n        cdk.requireProperty(props, 'workspaceId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreationDateTime = cdk.Token.asString(this.getAtt('CreationDateTime'));\n        this.attrUpdateDateTime = cdk.Token.asString(this.getAtt('UpdateDateTime'));\n\n        this.contentLocation = props.contentLocation;\n        this.sceneId = props.sceneId;\n        this.workspaceId = props.workspaceId;\n        this.capabilities = props.capabilities;\n        this.description = props.description;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::IoTTwinMaker::Scene\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnScene.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            contentLocation: this.contentLocation,\n            sceneId: this.sceneId,\n            workspaceId: this.workspaceId,\n            capabilities: this.capabilities,\n            description: this.description,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnScenePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnWorkspace`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html\n */\nexport interface CfnWorkspaceProps {\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.Role`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-role\n     */\n    readonly role: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.S3Location`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-s3location\n     */\n    readonly s3Location: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-workspaceid\n     */\n    readonly workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-description\n     */\n    readonly description?: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-tags\n     */\n    readonly tags?: { [key: string]: (string) };\n}\n\n/**\n * Determine whether the given properties match those of a `CfnWorkspaceProps`\n *\n * @param properties - the TypeScript properties of a `CfnWorkspaceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnWorkspacePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('description', cdk.validateString)(properties.description));\n    errors.collect(cdk.propertyValidator('role', cdk.requiredValidator)(properties.role));\n    errors.collect(cdk.propertyValidator('role', cdk.validateString)(properties.role));\n    errors.collect(cdk.propertyValidator('s3Location', cdk.requiredValidator)(properties.s3Location));\n    errors.collect(cdk.propertyValidator('s3Location', cdk.validateString)(properties.s3Location));\n    errors.collect(cdk.propertyValidator('tags', cdk.hashValidator(cdk.validateString))(properties.tags));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.requiredValidator)(properties.workspaceId));\n    errors.collect(cdk.propertyValidator('workspaceId', cdk.validateString)(properties.workspaceId));\n    return errors.wrap('supplied properties not correct for \"CfnWorkspaceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Workspace` resource\n *\n * @param properties - the TypeScript properties of a `CfnWorkspaceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::IoTTwinMaker::Workspace` resource.\n */\n// @ts-ignore TS6133\nfunction cfnWorkspacePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnWorkspacePropsValidator(properties).assertSuccess();\n    return {\n        Role: cdk.stringToCloudFormation(properties.role),\n        S3Location: cdk.stringToCloudFormation(properties.s3Location),\n        WorkspaceId: cdk.stringToCloudFormation(properties.workspaceId),\n        Description: cdk.stringToCloudFormation(properties.description),\n        Tags: cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnWorkspacePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnWorkspaceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnWorkspaceProps>();\n    ret.addPropertyResult('role', 'Role', cfn_parse.FromCloudFormation.getString(properties.Role));\n    ret.addPropertyResult('s3Location', 'S3Location', cfn_parse.FromCloudFormation.getString(properties.S3Location));\n    ret.addPropertyResult('workspaceId', 'WorkspaceId', cfn_parse.FromCloudFormation.getString(properties.WorkspaceId));\n    ret.addPropertyResult('description', 'Description', properties.Description != null ? cfn_parse.FromCloudFormation.getString(properties.Description) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::IoTTwinMaker::Workspace`\n *\n *\n *\n * @cloudformationResource AWS::IoTTwinMaker::Workspace\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html\n */\nexport class CfnWorkspace extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::IoTTwinMaker::Workspace\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnWorkspace {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnWorkspacePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnWorkspace(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     *\n     * @cloudformationAttribute Arn\n     */\n    public readonly attrArn: string;\n\n    /**\n     *\n     * @cloudformationAttribute CreationDateTime\n     */\n    public readonly attrCreationDateTime: string;\n\n    /**\n     *\n     * @cloudformationAttribute UpdateDateTime\n     */\n    public readonly attrUpdateDateTime: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.Role`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-role\n     */\n    public role: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.S3Location`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-s3location\n     */\n    public s3Location: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.WorkspaceId`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-workspaceid\n     */\n    public workspaceId: string;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.Description`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-description\n     */\n    public description: string | undefined;\n\n    /**\n     * `AWS::IoTTwinMaker::Workspace.Tags`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-workspace.html#cfn-iottwinmaker-workspace-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::IoTTwinMaker::Workspace`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnWorkspaceProps) {\n        super(scope, id, { type: CfnWorkspace.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'role', this);\n        cdk.requireProperty(props, 's3Location', this);\n        cdk.requireProperty(props, 'workspaceId', this);\n        this.attrArn = cdk.Token.asString(this.getAtt('Arn'));\n        this.attrCreationDateTime = cdk.Token.asString(this.getAtt('CreationDateTime'));\n        this.attrUpdateDateTime = cdk.Token.asString(this.getAtt('UpdateDateTime'));\n\n        this.role = props.role;\n        this.s3Location = props.s3Location;\n        this.workspaceId = props.workspaceId;\n        this.description = props.description;\n        this.tags = new cdk.TagManager(cdk.TagType.MAP, \"AWS::IoTTwinMaker::Workspace\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnWorkspace.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            role: this.role,\n            s3Location: this.s3Location,\n            workspaceId: this.workspaceId,\n            description: this.description,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnWorkspacePropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}
