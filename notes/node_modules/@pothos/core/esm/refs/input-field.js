import { inputFieldShapeKey } from '../types/index.js';
class InputFieldRef {
    toString() {
        var ref;
        if (this.kind !== "Arg") {
            if (this.fieldName) {
                return `${this.parentTypename}.${this.fieldName}`;
            }
            return this.parentTypename;
        }
        var ref1;
        const fieldName = (ref1 = (ref = this.argFor) === null || ref === void 0 ? void 0 : ref.fieldName) !== null && ref1 !== void 0 ? ref1 : "[unnamed filed]";
        var _fieldName;
        const argName = (_fieldName = this.fieldName) !== null && _fieldName !== void 0 ? _fieldName : "[unnamed argument]";
        return `${this.parentTypename}.${fieldName}(${argName})`;
    }
    constructor(kind, parentTypename) {
        this.kind = kind;
        this.parentTypename = parentTypename;
    }
}
export { InputFieldRef as default };
//# sourceMappingURL=input-field.js.map
