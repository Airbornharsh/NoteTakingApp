import ConfigStore from '../config-store';
import { FieldNullability, FieldRequiredness, InputType, InputTypeParam, OutputType, PothosInputFieldType, PothosNameInputFieldType, PothosNameOutputFieldType, PothosOutputFieldType, SchemaTypes, TypeParam } from '../types';
export declare function typeFromNonListParam<Types extends SchemaTypes>(type: OutputType<Types>, configStore: ConfigStore<Types>, nullable: boolean): PothosNameOutputFieldType<Types>;
export declare function typeFromParam<Types extends SchemaTypes>(param: TypeParam<Types>, configStore: ConfigStore<Types>, nullable: FieldNullability<[unknown]>): PothosOutputFieldType<Types>;
export declare function inputTypeFromNonListParam<Types extends SchemaTypes>(type: InputType<Types>, configStore: ConfigStore<Types>, required: boolean): PothosNameInputFieldType<Types>;
export declare function inputTypeFromParam<Types extends SchemaTypes>(param: InputTypeParam<Types>, configStore: ConfigStore<Types>, required: FieldRequiredness<[unknown]>): PothosInputFieldType<Types>;
//# sourceMappingURL=params.d.ts.map