import { OutputType, SchemaTypes } from '../types';
export * from './context-cache';
export * from './enums';
export * from './input';
export * from './params';
export * from './sort-classes';
export declare function assertNever(value: never): never;
export declare function assertArray(value: unknown): value is unknown[];
export declare function isThenable(value: unknown): value is Promise<unknown>;
export declare function verifyRef(ref: unknown): void;
export declare function verifyInterfaces(interfaces: unknown): void;
export declare function brandWithType<Types extends SchemaTypes>(val: unknown, type: OutputType<Types>): void;
export declare function getTypeBrand(val: unknown): import("../types").BaseEnum | (new (...args: any[]) => any) | "String" | "ID" | "Int" | "Float" | "Boolean" | null;
//# sourceMappingURL=index.d.ts.map