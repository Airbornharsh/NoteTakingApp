import { GraphQLInterfaceType, GraphQLNamedType } from 'graphql';
import SchemaBuilder from './builder';
import { BasePlugin, InputType, OutputType, PothosEnumTypeConfig, PothosInputFieldConfig, PothosInputObjectTypeConfig, PothosInterfaceTypeConfig, PothosMutationTypeConfig, PothosObjectTypeConfig, PothosQueryTypeConfig, PothosScalarTypeConfig, PothosSubscriptionTypeConfig, PothosTypeConfig, PothosUnionTypeConfig, SchemaTypes } from '.';
export default class BuildCache<Types extends SchemaTypes> {
    types: Map<string, GraphQLNamedType>;
    builder: PothosSchemaTypes.SchemaBuilder<Types>;
    plugin: BasePlugin<Types>;
    options: PothosSchemaTypes.BuildSchemaOptions<Types>;
    private configStore;
    private pluginMap;
    private pluginList;
    private implementers;
    private typeConfigs;
    private enumValueConfigs;
    private outputFieldConfigs;
    private inputFieldConfigs;
    constructor(builder: SchemaBuilder<Types>, options: PothosSchemaTypes.BuildSchemaOptions<Types>);
    getTypeConfig<T extends PothosTypeConfig['kind']>(ref: InputType<Types> | OutputType<Types> | string, kind?: T): Extract<PothosEnumTypeConfig, {
        kind: T;
    }> | Extract<PothosInputObjectTypeConfig, {
        kind: T;
    }> | Extract<PothosInterfaceTypeConfig, {
        kind: T;
    }> | Extract<PothosMutationTypeConfig, {
        kind: T;
    }> | Extract<PothosObjectTypeConfig, {
        kind: T;
    }> | Extract<PothosQueryTypeConfig, {
        kind: T;
    }> | Extract<PothosScalarTypeConfig, {
        kind: T;
    }> | Extract<PothosSubscriptionTypeConfig, {
        kind: T;
    }> | Extract<PothosUnionTypeConfig, {
        kind: T;
    }>;
    getInputTypeFieldConfigs(ref: InputType<Types>): Record<string, PothosInputFieldConfig<Types>>;
    getImplementers(iface: GraphQLInterfaceType): PothosObjectTypeConfig[];
    buildAll(): void;
    buildTypeFromConfig(baseConfig: PothosTypeConfig): void;
    private addType;
    private buildOutputTypeParam;
    private buildInputTypeParam;
    private buildFields;
    private buildInputFields;
    private getInterfaceFields;
    private getObjectFields;
    private getRootFields;
    private getFields;
    private getInputFields;
    private getType;
    private getOutputType;
    private getInputType;
    private getTypeOfKind;
    private buildObject;
    private buildInterface;
    private buildUnion;
    private buildInputObject;
    private buildScalar;
    private buildEnum;
}
//# sourceMappingURL=build-cache.d.ts.map