export { a as assertNotBrowser, r as resolveHTTPResponse } from './resolveHTTPResponse-ddb56677.esm.js';
export { L as LegacyRouter, L as Router, r as router } from './router-93491dae.esm.js';
export { S as Subscription, s as subscriptionPullFactory } from './subscription-2ea469a3.esm.js';
export { T as TRPCError } from './transformTRPCResponse-45c225c3.esm.js';
import { createHTTPServer, createHTTPHandler } from '../adapters/standalone/dist/trpc-server-adapters-standalone.esm.js';
import { n as nodeHTTPRequestHandler } from './nodeHTTPRequestHandler-372a4a4f.esm.js';
import './codes-5678cc97.esm.js';
import 'events';
import 'http';
import 'url';

// this has been moved to separate package

/**
 * @deprecated use `createHTTPServer` from `@trpc/server/adapters/standalone`
 */
const createHttpServer = createHTTPServer;
/**
 * @deprecated use `createHTTPHandler` from `@trpc/server/adapters/standalone`
 */

const createHttpHandler = createHTTPHandler;
/**
 * @deprecated use `CreateHTTPHandlerOptions` from `@trpc/server/adapters/standalone`
 */

/**
 * @deprecated use `nodeHTTPRequestHandler` from `@trpc/server/adapters/node-http`
 */

const requestHandler = nodeHTTPRequestHandler;
/**
 * @deprecated use `NodeHTTPCreateContextFn` from `@trpc/server/adapters/node-http`
 */

export { createHttpHandler, createHttpServer, requestHandler };
